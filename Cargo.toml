[package]
authors = ["James Waples <jamwaffles@gmail.com>"]
categories = ["embedded", "no-std"]
description = "I2C/SPI driver for the SSD1306 OLED display controller"
documentation = "https://docs.rs/ssd1306"
keywords = ["no-std", "ssd1306", "oled", "embedded", "embedded-hal-driver"]
license = "MIT OR Apache-2.0"
name = "ssd1306"
readme = "README.md"
repository = "https://github.com/rust-embedded-community/ssd1306"
version = "0.9.0"
edition = "2021"
exclude = ["build.rs", "build.sh", "memory.x", "doc", "*.jpg", "*.png", "*.bmp"]
rust-version = "1.75.0"

[package.metadata.docs.rs]
targets = ["thumbv7m-none-eabi", "thumbv7em-none-eabihf"]
all-features = true

[dependencies]
embedded-hal = "1.0.0"
display-interface = "0.5.0"
display-interface-i2c = "0.5.0"
display-interface-spi = "0.5.0"
embedded-graphics-core = { version = "0.4.0", optional = true }
embedded-hal-async = { version = "1.0.0", optional = true }
maybe-async-cfg = "=0.2.4"

[dev-dependencies]
embedded-graphics = "0.8.0"

[target.'cfg(target_arch="arm")'.dev-dependencies]
cortex-m = { version = "0.7.2", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7.3"
cortex-m-rtic = "1.1.4"
defmt = "0.3.6"
defmt-rtt = "0.4.0"
panic-probe = { version = "0.3.1", features = ["print-defmt"] }
# Used to load BMP images in various examples
tinybmp = "0.6.0"
# Used by the noise_i2c examples
rand = { version = "0.8.4", default-features = false, features = ["small_rng"] }
embassy-embedded-hal = { version = "0.3.0", default-features = false }
embassy-executor = { version = "0.7.0", features = [
  "arch-cortex-m",
  "executor-thread",
  "defmt",
] }
embassy-stm32 = { version = "0.2.0", features = [
  "stm32f103c8",
  "memory-x",
  "defmt",
  "exti",
  "time-driver-tim3",
  "unstable-pac",
] }
embassy-time = { version = "0.4.0" }
embassy-futures = "0.1.1"
embedded-hal-bus = { version = "0.3.0", features = ["async"] }

[features]
default = ["graphics"]
graphics = ["embedded-graphics-core"]
async = ["dep:embedded-hal-async"]

[[example]]
name = "async_i2c_spi"
required-features = ["async"]

[[example]]
name = "async_terminal_i2c"
required-features = ["async"]

[profile.dev]
opt-level = "s"
codegen-units = 1
incremental = false

[profile.release]
codegen-units = 1
debug = true
lto = true
